require 'rails-controller-testing'
require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator.  If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails.  There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.
#
# Compared to earlier versions of this generator, there is very limited use of
# stubs and message expectations in this spec.  Stubs are only used when there
# is no simpler way to get a handle on the object needed for the example.
# Message expectations are only used when there is no simpler way to specify
# that an instance is receiving a specific message.

RSpec.describe Api::V1::EstimateStatusesController, type: :controller do

  let(:valid_attributes) {
    { name: 'Estimate status' }
  }

  before(:each) do
    @user = User.first || create(:user)
    sign_in @user

    Thread.current[:user] = @user
  end

  after(:each) do
    sign_out @user
  end

  describe "GET #index" do
    it "assigns all estimate statuses as @estimate_statuses" do
      estimate_status = EstimateStatus.create(valid_attributes)

      get :index, { format: :json }
      expect(assigns(:estimate_statuses)).to include(estimate_status)
    end
  end

  describe "GET #show" do
    it "assigns the requested estimate status as @estimate_status" do
      estimate_status = EstimateStatus.create(valid_attributes)

      get :show, { id: estimate_status.id, format: :json }
      expect(assigns(:estimate_status)).to eq(estimate_status)
    end
  end
end
