$(document).on("page:change", function () {
  'use strict';

  var hasValue = function (value) {
    return value !== null && value !== undefined && value !== '';
  };

  $('.customer-selector').each(function () {
    var searchInput = $(this).find('input[type=text]'),
        searchId = $(this).find('input[type=hidden]'),
        url= $(this).attr('url_source');

    $(searchInput).on('keyup', function (event) {
      if ($(this).val() === '') {
        searchId.val('');
      }
    });

    $(searchInput).autocomplete({
      minLength: 1,
      delay: 100,
      source: function (request, response) {
        $.ajax({
          type: 'GET',
          url: url,
          data: {
            name: $(searchInput).val()
          },
          success: function(data, textStatus, jqXHR) {
            var i, customers = data.customers, l = customers.length, found = [];

            for (i = 0; i < l; i += 1) {
              found.push({
                id: customers[i].id,
                label: customers[i].name
              });
            }

            response(found);
          },

          error: function(jqXHR, textStatus, errorThrown) {
            console.log('Filter request failed. Status: ' + textStatus + ', Error thrown: ' + errorThrown);
          }
        });
      },
      select: function(event, ui) {
        searchId.val(ui.item.id);
      }
    });

    $(searchInput).focusout(function () {
      var value = searchId.val(),
          text = searchInput.val();
      if (!hasValue(value) && hasValue(text)) {
        $.ajax({
          type: 'GET',
          url: url,
          data: {
            name: $(searchInput).val()
          },
          success: function (data, textStatus, jqXHR) {
            var i, l;

            for (i = 0, l = data.length; i < l; i += 1) {
              if (data[i].name === text) {
                searchId.val(data[i].id);
              }
            }
          }
        });
      }
    });
  });
});
